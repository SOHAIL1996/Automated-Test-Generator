{"status": "broken", "description": "Verification if object is ahead.\n        ", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "pick_test"}, {"name": "subSuite", "value": "TestPickAction"}, {"name": "host", "value": "Hyper-Dock"}, {"name": "thread", "value": "7854-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython2"}, {"name": "package", "value": "tests.pick_test"}], "stop": 1607411934146, "uuid": "5cea784f-3315-4cc9-834c-95eff21450d8", "historyId": "4e321fb2240e96e6476a9b7413e4282c", "name": "test_verify_object_ahead_exists", "start": 1607411934092, "fullName": "tests.pick_test.TestPickAction#test_verify_object_ahead_exists", "statusDetails": {"message": "KeyError: \"['lab'] not found in axis\"", "trace": "self = <tests.pick_test.TestPickAction instance at 0x7fe8a535f9e0>\n\n    def test_verify_object_ahead_exists(self):\n        \"\"\"Verification if object is ahead.\n        \"\"\"\n        log, lucy_log = data_reader('logger/logs/pick_action_end')\n        log = log.set_index(\"Models\")\n        hsrb = log.loc[\"hsrb\"]\n        hsrb = hsrb.values.tolist()[1:]\n        log = log.drop(\"hsrb\", axis=0)\n        log = log.drop(\"ground_plane\", axis=0)\n>       log = log.drop(\"lab\", axis=0)\n\ntests/pick_test.py:87: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python2.7/dist-packages/pandas/core/frame.py:3940: in drop\n    errors=errors)\n/usr/local/lib/python2.7/dist-packages/pandas/core/generic.py:3780: in drop\n    obj = obj._drop_axis(labels, axis, level=level, errors=errors)\n/usr/local/lib/python2.7/dist-packages/pandas/core/generic.py:3812: in _drop_axis\n    new_axis = axis.drop(labels, errors=errors)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = Index([u'lab123', u'table425', u'shelf615', u'sofa221', u'cabinet838',\n       ...'fork935', u'minicoffeetable', u'glass'],\n      dtype='object', name=u'Models')\nlabels = array(['lab'], dtype=object), errors = 'raise'\n\n    def drop(self, labels, errors='raise'):\n        \"\"\"\n        Make new Index with passed list of labels deleted.\n    \n        Parameters\n        ----------\n        labels : array-like\n        errors : {'ignore', 'raise'}, default 'raise'\n            If 'ignore', suppress error and existing labels are dropped.\n    \n        Returns\n        -------\n        dropped : Index\n    \n        Raises\n        ------\n        KeyError\n            If not all of the labels are found in the selected axis\n        \"\"\"\n        arr_dtype = 'object' if self.dtype == 'object' else None\n        labels = com.index_labels_to_array(labels, dtype=arr_dtype)\n        indexer = self.get_indexer(labels)\n        mask = indexer == -1\n        if mask.any():\n            if errors != 'ignore':\n                raise KeyError(\n>                   '{} not found in axis'.format(labels[mask]))\nE               KeyError: \"['lab'] not found in axis\"\n\n/usr/local/lib/python2.7/dist-packages/pandas/core/indexes/base.py:4965: KeyError"}, "attachments": [{"source": "11f08ce3-fae6-47f4-9abc-d8c42b238a47-attachment.txt", "type": "text/plain", "name": "log"}, {"source": "476ef313-fa32-4c17-8dea-8ccd316d5a17-attachment.txt", "type": "text/plain", "name": "stdout"}, {"source": "5aa1f632-58f0-4518-994b-18d15afa371a-attachment.txt", "type": "text/plain", "name": "stderr"}]}